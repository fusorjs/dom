import {TaggedCreator, GetPropConfig, CustomCreator} from './types';
import {getPropConfig$$} from './config';
import {initElement} from './element';
import {getTaggedCreatorMap} from './utils';

/** @deprecated */
export const createHtml = (
  tagName: string,
  args: any[],
  config: GetPropConfig,
) => {
  const arg = args[0];

  if (arg?.constructor === Object) {
    const is = (arg as any).is;

    if (typeof is === 'string') {
      return initElement(
        document.createElement(tagName, {is}),
        args,
        config,
      ) as any;
    }
  }

  return initElement(document.createElement(tagName), args, config) as any;
};

export const h: CustomCreator<HTMLElement> = (tagName, ...args) =>
  createHtml(tagName, args, getPropConfig$$);

const defaultButtonProps = {type: 'button'} as const; // single instance

export const button: TaggedCreator<HTMLButtonElement> = (...args) =>
  initElement(
    document.createElement('button'),
    [defaultButtonProps, ...args],
    getPropConfig$$,
  ) as any;

export const getTaggedHtmlCreator =
  (tagName: string): TaggedCreator<HTMLElement> =>
  (...args) =>
    createHtml(tagName, args, getPropConfig$$);

type Result = {
  [K in keyof HTMLElementTagNameMap]: TaggedCreator<HTMLElementTagNameMap[K]>;
};

export const {
  a,
  abbr,
  address,
  area,
  article,
  aside,
  audio,
  b,
  base,
  bdi,
  bdo,
  blockquote,
  body,
  br,
  // button,
  canvas,
  caption,
  cite,
  code,
  col,
  colgroup,
  data,
  datalist,
  dd,
  del,
  details,
  dfn,
  dialog,
  div,
  dl,
  dt,
  em,
  embed,
  fieldset,
  figcaption,
  figure,
  footer,
  form,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  head,
  header,
  hgroup,
  hr,
  html,
  i,
  iframe,
  img,
  input,
  ins,
  kbd,
  label,
  legend,
  li,
  link,
  main,
  map,
  mark,
  menu,
  meta,
  meter,
  nav,
  noscript,
  object,
  ol,
  optgroup,
  option,
  output,
  p,
  picture,
  pre,
  progress,
  q,
  rp,
  rt,
  ruby,
  s,
  samp,
  script,
  section,
  select,
  slot,
  small,
  source,
  span,
  strong,
  style,
  sub,
  summary,
  sup,
  table,
  tbody,
  td,
  template,
  textarea,
  tfoot,
  th,
  thead,
  time,
  title,
  tr,
  track,
  u,
  ul,
  var: hvar,
  video,
  wbr,
} = getTaggedCreatorMap<Result, keyof HTMLElementTagNameMap>(
  getTaggedHtmlCreator,
  [
    'a',
    'abbr',
    'address',
    'area',
    'article',
    'aside',
    'audio',
    'b',
    'base',
    'bdi',
    'bdo',
    'blockquote',
    'body',
    'br',
    // 'button',
    'canvas',
    'caption',
    'cite',
    'code',
    'col',
    'colgroup',
    'data',
    'datalist',
    'dd',
    'del',
    'details',
    'dfn',
    'dialog',
    'div',
    'dl',
    'dt',
    'em',
    'embed',
    'fieldset',
    'figcaption',
    'figure',
    'footer',
    'form',
    'h1',
    'h2',
    'h3',
    'h4',
    'h5',
    'h6',
    'head',
    'header',
    'hgroup',
    'hr',
    'html',
    'i',
    'iframe',
    'img',
    'input',
    'ins',
    'kbd',
    'label',
    'legend',
    'li',
    'link',
    'main',
    'map',
    'mark',
    'menu',
    'meta',
    'meter',
    'nav',
    'noscript',
    'object',
    'ol',
    'optgroup',
    'option',
    'output',
    'p',
    'picture',
    'pre',
    'progress',
    'q',
    'rp',
    'rt',
    'ruby',
    's',
    'samp',
    'script',
    'section',
    'select',
    'slot',
    'small',
    'source',
    'span',
    'strong',
    'style',
    'sub',
    'summary',
    'sup',
    'table',
    'tbody',
    'td',
    'template',
    'textarea',
    'tfoot',
    'th',
    'thead',
    'time',
    'title',
    'tr',
    'track',
    'u',
    'ul',
    'var',
    'video',
    'wbr',
  ],
);
